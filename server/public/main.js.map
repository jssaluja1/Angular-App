{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content.component.css","webpack:///./src/app/content.component.html","webpack:///./src/app/content.component.ts","webpack:///./src/app/data/employee.service.ts","webpack:///./src/app/data/position.service.ts","webpack:///./src/app/employee.component.css","webpack:///./src/app/employee.component.html","webpack:///./src/app/employee.component.ts","webpack:///./src/app/employees.component.css","webpack:///./src/app/employees.component.html","webpack:///./src/app/employees.component.ts","webpack:///./src/app/footer.component.css","webpack:///./src/app/footer.component.html","webpack:///./src/app/footer.component.ts","webpack:///./src/app/home.component.css","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/nav.component.css","webpack:///./src/app/nav.component.html","webpack:///./src/app/nav.component.ts","webpack:///./src/app/not-found.component.css","webpack:///./src/app/not-found.component.html","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/position.component.css","webpack:///./src/app/position.component.html","webpack:///./src/app/position.component.ts","webpack:///./src/app/positions.component.css","webpack:///./src/app/positions.component.html","webpack:///./src/app/positions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { EmployeesComponent } from './employees.component';\nimport { PositionsComponent } from './positions.component';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { EmployeeComponent } from './employee.component';\nimport { PositionComponent } from './position.component';\n\nconst routes: Routes = [\n  {path:'home', component:HomeComponent},\n  {path:'employees', component:EmployeesComponent},\n  {path:'positions', component:PositionsComponent},\n  {path:'employee/:_id', component:EmployeeComponent},\n  {path:'position/:_id', component:PositionComponent},\n  {path:'', redirectTo:\"/home\", pathMatch: 'full'},\n  {path:'**', component:PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<app-content></app-content>\\n<app-footer></app-footer>\\n\\n\"","/*********************************************************************************\n* WEB422 – Assignment 06\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. No part of this\n* assignment has been copied manually or electronically from any other source (including web sites) or\n* distributed to other students.\n*\n* Name: _Jasmeet Singh Saluja______ Student ID: _102579166__ Date: _3rd August, 2018_\n*\n* Heroku Link: ___________________________\n*\n********************************************************************************/ \nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav.component';\nimport { ContentComponent } from './content.component';\nimport { FooterComponent } from './footer.component';\nimport { HomeComponent } from './home.component';\nimport { EmployeesComponent } from './employees.component';\nimport { PositionsComponent } from './positions.component';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { PositionServiceService } from './data/position.service';\nimport { EmployeeServiceService } from './data/employee.service';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { EmployeeComponent } from './employee.component';\nimport { PositionComponent } from './position.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ContentComponent,\n    FooterComponent,\n    HomeComponent,\n    EmployeesComponent,\n    PositionsComponent,\n    PageNotFoundComponent,\n    EmployeeComponent,\n    PositionComponent],\n\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule],\n\n  providers: [\n    EmployeeServiceService,\n    PositionServiceService],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, of } from 'rxjs';\nimport { Employees } from './employees';\nimport { EmployeeRaw } from './employeeRaw';\n\n@Injectable()\nexport class EmployeeServiceService {\n  private url=\"https://stormy-earth-26721.herokuapp.com\";\n\n  constructor(private http:HttpClient) {}\n\n\n  getEmployees() : Observable<Employees[]> {\n    return this.http.get<Employees[]>(`${this.url}/employees`);\n  }\n\n\n  saveEmployee(employee : EmployeeRaw) : Observable<any> {\n    return this.http.put<any>(this.url + \"/employee/\" + employee._id, employee);\n  }\n\n  \n  getEmployee(id) : Observable<EmployeeRaw[]> {\n    return this.http.get<EmployeeRaw[]>(this.url + \"/employee-raw/\" + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Positions} from './positions';\nimport { Observable , of } from 'rxjs';\n\n@Injectable()\nexport class PositionServiceService {\n  private URL=\"https://stormy-earth-26721.herokuapp.com\";\n  \n  constructor(private http: HttpClient) { }\n\n  getPositions(): Observable<Positions[]> {\n    return this.http.get<Positions[]>(`${this.URL}/positions`);\n  }\n\n  savePosition(position : Positions): Observable<any> {\n    return this.http.put<any>(this.URL + \"/position/\" + position._id, position);\n  }\n\n  getPosition(id): Observable<Positions[]>{\n    return this.http.get<Positions[]>(this.URL + \"/position/\" + id);\n  }\n}\n","module.exports = \".center{ margin-top:40px; }\"","module.exports = \"<div class=\\\"center\\\" *ngIf=\\\"employee\\\" >\\n  <h2>Employee: {{employee.FirstName}}&nbsp;{{employee.LastName}}</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum.</p>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"employee\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': FirstName.errors}\\\">\\n          <label for=\\\"FirstName\\\" class=\\\"control-label\\\">First Name:</label>\\n          <input class=\\\"form-control\\\" id=\\\"FirstName\\\" type=\\\"text\\\"  name=\\\"FirstName\\\" [(ngModel)]=\\\"employee.FirstName\\\" #FirstName=\\\"ngModel\\\" required autofocus/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"FirstName.errors && FirstName.errors.required\\\">First Name is Required</span>\\n        </div>   \\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': LastName.errors}\\\">\\n          <label for=\\\"LastName\\\" class=\\\"control-label\\\">Last Name:</label>\\n          <input class=\\\"form-control\\\" id=\\\"LastName\\\" type=\\\"text\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"employee.LastName\\\" #LastName=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"LastName.errors && LastName.errors.required\\\">Last Name is Required</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Position\\\" class=\\\"control-label\\\">Position:</label>\\n          <select class=\\\"form-control\\\" id=\\\"Position\\\"  name=\\\"Position\\\" [(ngModel)]=\\\"employee.Position\\\">\\n            <option  *ngFor=\\\"let position of positions\\\" [value]=\\\"position._id\\\">{{position.PositionName}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': SalaryBonus.errors}\\\">\\n          <label for=\\\"SalaryBonus\\\" class=\\\"control-label\\\">Salary Bonus</label>\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">$</span>\\n            <input class=\\\"form-control\\\" id=\\\"SalaryBonus\\\" type=\\\"number\\\" name=\\\"SalaryBonus\\\" [(ngModel)]=\\\"employee.SalaryBonus\\\" #SalaryBonus=\\\"ngModel\\\" required/>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"SalaryBonus.errors && SalaryBonus.errors.required\\\">Salary bonus is Required</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressStreet.errors}\\\">\\n          <label for=\\\"AddressStreet\\\" class=\\\"control-label\\\">Address (Street):</label>\\n          <input class=\\\"form-control\\\" id=\\\"AddressStreet\\\" type=\\\"text\\\" name=\\\"AddressStreet\\\" [(ngModel)]=\\\"employee.AddressStreet\\\" #AddressStreet=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressStreet.errors && AddressStreet.errors.required\\\">Address street is Required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressCity.errors}\\\">\\n          <label for=\\\"AddressCity\\\">Address (City):</label>\\n          <input class=\\\"form-control\\\" id=\\\"AddressCity\\\" type=\\\"text\\\" name=\\\"AddressCity\\\" [(ngModel)]=\\\"employee.AddressCity\\\" #AddressCity=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressCity.errors && AddressCity.errors.required\\\">Address city is Required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressState.errors}\\\">\\n          <label for=\\\"AddressState\\\" class=\\\"control-label\\\">Address (State):</label>\\n          <input class=\\\"form-control\\\" id=\\\"AddressState\\\" type=\\\"text\\\" name=\\\"AddressState\\\" [(ngModel)]=\\\"employee.AddressState\\\" #AddressState=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressState.errors && AddressState.errors.required\\\">Address state is Required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressZip.errors}\\\">\\n          <label for=\\\"AddressZip\\\" class=\\\"control-label\\\">Address (Zip Code):</label>\\n          <input class=\\\"form-control\\\" id=\\\"AddressZip\\\" type=\\\"text\\\" name=\\\"AddressZip\\\" [(ngModel)]=\\\"employee.AddressZip\\\" #AddressZip=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressZip.errors && AddressZip.errors.required\\\">Address zip is Required</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"PhoneNum\\\" class=\\\"control-label\\\">Phone Number:</label>\\n          <input class=\\\"form-control\\\" id=\\\"PhoneNum\\\" type=\\\"text\\\" name=\\\"PhoneNum\\\" [(ngModel)]=\\\"employee.PhoneNum\\\" #PhoneNum=\\\"ngModel\\\" ng-pattern=\\\"\\\\+?[ ]*[1-9]?[ ]*\\\\-?[ ]*\\\\(?[ ]*[1-9][ ]*(\\\\d[ ]*){2}\\\\)?[ ]*\\\\-?[ ]*(\\\\d[ ]*){3}-[ ]*(\\\\d[\\n          ]*){4}\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': Extension.errors}\\\">\\n          <label for=\\\"Extension\\\" class=\\\"control-label\\\">Extension:</label>\\n          <input class=\\\"form-control\\\" id=\\\"Extension\\\" type=\\\"number\\\" name=\\\"Extension\\\" [(ngModel)]=\\\"employee.Extension\\\" #Extension=\\\"ngModel\\\" required/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"Extension.errors && Extension.errors.required\\\">Extension is Required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"HireDate\\\" class=\\\"control-label\\\">Hire Date:</label>\\n          <input class=\\\"form-control\\\" id=\\\"HireDate\\\" name=\\\"HireDate\\\" type=\\\"text\\\" value=\\\"HireDate\\\" [value]=\\\"employee.HireDate | date\\\" readonly >\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n    <a routerLink=\\\"/employees\\\" class=\\\"btn btn-warning pull-left\\\">Return to Employee List</a>\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Employee\\\" [disabled]=\\\"!f.valid\\\" />\\n    <br />\\n    <br />\\n  </form>\\n</div>\\n</div>\\n<br />\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\" >\\n  <strong>Success!</strong> First Name Last Name's information was successfully saved.\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"failMessage\\\" >\\n  <strong>Error!</strong> First Name Last Name's information could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeRaw } from './data/employeeRaw';\nimport { Positions } from './data/positions'\nimport { EmployeeServiceService } from './data/employee.service';\nimport { PositionServiceService } from './data/position.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  private paramSubScription: any;\n  private employeeSubscription: any;\n  private getPositionsSubcription: any;\n  private saveEmployeeSubscription: any;\n  employee: EmployeeRaw;\n  private positions: Positions[];\n\n  private successMessage = false;\n  private failMessage = false;\n  \n  constructor(private e: EmployeeServiceService, private p: PositionServiceService, private r: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.paramSubScription = this.r.params.subscribe((param) => {\n      \n      this.employeeSubscription = this.e.getEmployee(param['_id']).subscribe((data) => {\n        this.employee = data[0];\n      });\n\n      this.getPositionsSubcription = this.p.getPositions().subscribe((data) => {\n        this.positions = data;\n      });\n\n    })\n  }\n\n  onSubmit() {\n    this.saveEmployeeSubscription = this.e.saveEmployee(this.employee).subscribe(() => {\n      this.successMessage = true;\n      setTimeout(() => {this.successMessage = false;}, 2500);\n    },\n    () => {this.failMessage = true;\n      setTimeout(() => {this.failMessage = false;}, 2500);\n    });\n  }\n\n  ngOnDestroy( ){\n    if(this.paramSubScription){this.paramSubScription.unsubscribe();}\n    if(this.employeeSubscription){this.employeeSubscription.unsubscribe();}\n    if(this.getPositionsSubcription){this.getPositionsSubcription.unsubscribe();}\n    if(this.saveEmployeeSubscription){this.saveEmployeeSubscription.unsubscribe();}\n  }\n\n}\n","module.exports = \".center{ margin-top:40px; }\\n.table-responsive{margin-bottom:60px;}\"","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Employees</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum. Nunc quis semper sem.<br>\\n    Morbi libero elit elementum quis faucibus ac, condimentum quis nibh.</p>\\n</div>\\n\\n<input class=\\\"form-control\\\" id=\\\"EmployeeSearch\\\" name=\\\"EmployeeSearch\\\" type=\\\"text\\\" placeholder=\\\"Search\\nEmployees by Full Name or Position\\\" (keyup)=\\\"onEmployeeSearchKeyUP($event)\\\" /><br />\\n      \\n<div class=\\\"table-responsive\\\">\\n       <table class=\\\"table\\\">\\n         <thead>\\n           <tr>\\n             <th scope=\\\"col\\\">Full Name</th>\\n             <th scope=\\\"col\\\">Address</th>\\n             <th scope=\\\"col\\\">Phone Number</th>\\n             <th scope=\\\"col\\\">Hire Date</th>\\n           </tr>\\n         </thead>\\n         <tbody>\\n           <tr *ngFor=\\\"let employee of filteredEmployees\\\" (click)=\\\"routeEmployee(employee._id)\\\">\\n             <td>{{employee.FirstName}} {{employee.LastName}}</td>\\n             <td>{{employee.Position.PositionName}}</td>\\n             <td>{{employee.PhoneNum}}</td>\\n             <td>{{employee.HireDate | date: 'longDate'}}</td>\\n           </tr>\\n         </tbody>\\n       </table>\\n</div>\\n       \\n    \"","import { Component, OnInit } from '@angular/core';\nimport { Employees } from './data/employees';\nimport { EmployeeServiceService } from './data/employee.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n  employees: Employees[];\n  filteredEmployees: Employees[];\n  getEmployeesSub: any;\n  loadingError:boolean = false;\n\n  constructor(private employeeService: EmployeeServiceService, private router: Router) { }\n\n  ngOnInit() {\n    this.getEmployeesSub = this.employeeService.getEmployees().subscribe( data => {this.employees = data;this.filteredEmployees = data;}, () =>\n    {this.loadingError = true;});\n  }\n\n  ngOnDestroy() {\n    if(this.getEmployeesSub){\n      this.getEmployeesSub.unsubscribe();\n    }\n  }\n\n  routeEmployee(id: string){\n    this.router.navigate(['/employee', id]);\n  }\n\n  onEmployeeSearchKeyUP(event:any){\n    let substring : string = event.target.value.toLowerCase();\n    this.filteredEmployees = this.employees.filter((e) => ((e.FirstName.toLowerCase().indexOf(substring) !== -1 ) || (e.LastName.toLowerCase().indexOf(substring) !== -1) || (e.Position.PositionName.toLocaleLowerCase().indexOf(substring) !== -1) ))\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"color-border\\\" > </div>\\n<footer id=\\\"footer\\\">\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">Copyright &copy; 2018 Jasmeet Singh Saluja (WEB422). Design by <a href=\\\"http://www.templategarden.com\\\" rel=\\\"nofollow\\\">TemplateGarden</a></div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"follow-us\\\"> <a class=\\\"fa fa-facebook social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-twitter social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-linkedin social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-google-plus social-icon\\\" href=\\\"#\\\"></a> </div>\\n    </div>\\n  </div>\\n</div>\\n</footer>\\n<!--/#footer--> \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"section {\\n    padding: 70px 0;\\n   }\\n   .no-margin {\\n    margin: 0;\\n    padding: 0;\\n   } \"","module.exports = \"<section id=\\\"main-slider\\\" class=\\\"no-margin\\\">\\n  <div class=\\\"carousel slide\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"1\\\"></li>\\n      <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"2\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div class=\\\"item active\\\" style=\\\"background-image: url(assets/images/slider/bg1.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Welcome to <span class=\\\"logo\\\"><i class=\\\"fa fa-bolt\\\"></i> Influx</span></h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                <a class=\\\"btn-slide\\\" href=\\\"about-us.html\\\">Read More</a> </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item-->\\n\\n      <div class=\\\"item\\\" style=\\\"background-image: url(assets/images/slider/bg2.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Typi non habent claritatem insitam</h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                <!-- <a class=\\\"btn-slide\\\" href=\\\"about-us.html\\\">Read More</a> -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item-->\\n\\n      <div class=\\\"item\\\" style=\\\"background-image: url(assets/images/slider/bg3.jpg)\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row slide-margin\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"carousel-content\\\">\\n                <h1>Mirum est notare quam littera gothica</h1>\\n                <h2>Lorem ipsum dolor sit amet, consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt laoreet</h2>\\n                <!-- <a class=\\\"btn-slide\\\" href=\\\"about-us.html\\\">Read More</a> -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.item-->\\n    </div>\\n    <!--/.carousel-inner-->\\n  </div>\\n  <!--/.carousel-->\\n  <a class=\\\"prev hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"prev\\\">\\n    <i class=\\\"fa fa-chevron-left\\\"></i>\\n  </a>\\n  <a class=\\\"next hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"next\\\">\\n    <i class=\\\"fa fa-chevron-right\\\"></i>\\n  </a>\\n</section>\\n<!--/#main-slider-->\\n<div class=\\\"color-border\\\"> </div>\\n<section id=\\\"feature\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"center\\\">\\n      <h2>Featured Services</h2>\\n      <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum. Nunc quis semper\\n        sem.\\n        <br> Morbi libero elit elementum quis faucibus ac, condimentum quis nibh.</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"features\\\">\\n        <div class=\\\"col-md-6 \\\">\\n          <div class=\\\"feature-wrap\\\">\\n            <i class=\\\"fa fa-desktop\\\"></i>\\n            <h2>Employees</h2>\\n            <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique.</h3>\\n          </div>\\n        </div>\\n        <!--/.col-md-4    col-sm-6-->\\n\\n        <div class=\\\"col-md-6 \\\">\\n          <div class=\\\"feature-wrap\\\">\\n            <i class=\\\"fa fa-cogs\\\"></i>\\n            <h2>Positions</h2>\\n            <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique.</h3>\\n          </div>\\n        </div>\\n       \\n      </div>\\n      <!--/.services-->\\n    </div>\\n    <!--/.row-->\\n  </div>\\n  <!--/.container-->\\n</section>\\n<!--/#feature-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"  \\n  <header id=\\\"header\\\">\\n    <nav class=\\\"navbar navbar-inverse\\\" role=\\\"banner\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"> <span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> </button>\\n          <a class=\\\"navbar-brand\\\" href=\\\"index.html\\\"><i class=\\\"fa fa-play-circle\\\"></i> Jasmeet Singh Saluja(API Demo)</a></div>\\n        <div class=\\\"collapse navbar-collapse navbar-right\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n            \\n            <li routerLinkActive=\\\"active\\\">  <a routerLink=\\\"/home\\\">Home</a></li>\\n            <li routerLinkActive=\\\"active\\\">  <a routerLink=\\\"/employees\\\">Employees</a></li>\\n            <li routerLinkActive=\\\"active\\\">  <a routerLink=\\\"/positions\\\">Positions</a></li>\\n            \\n          </ul>\\n        </div>\\n      </div>\\n      <!--/.container--> \\n    </nav>\\n    <!--/nav--> \\n    \\n  </header>\\n  <!--/header-->\\n  <div class=\\\"color-border\\\"> </div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\"> Page Not Found </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".center{ margin-top:40px; }\"","module.exports = \"\\n\\n<div class=\\\"center\\\" *ngIf=\\\"position\\\" >\\n  <h2>Position: {{position.PositionName}}</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum.</p>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"position\\\" >\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #f=\\\"ngForm\\\" (ngSubmit)='onSubmit(f)'>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': PositionName.errors}\\\">\\n              <label for=\\\"PositionName\\\">Position Name:</label>\\n              <input class=\\\"form-control\\\" id=\\\"PositionName\\\" type=\\\"text\\\" name=\\\"PositionName\\\" [(ngModel)]=\\\"position.PositionName\\\" #PositionName=\\\"ngModel\\\" required/>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"PositionName.errors && PositionName.errors.required\\\">Position name is Required</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': PositionDescription.errors}\\\">\\n              <label for=\\\"PositionDescription\\\">Description:</label>\\n              <textarea class=\\\"form-control\\\" id=\\\"PositionDescription\\\" rows=\\\"5\\\" name=\\\"PositionDescription\\\" [(ngModel)]=\\\"position.PositionDescription\\\" #PositionDescription=\\\"ngModel\\\" required></textarea>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"PositionDescription.errors && PositionDescription.errors.required\\\">Position description is Required</span>\\n            </div>\\n          </div>\\n        </div>\\n        <hr />\\n        <a routerLink=\\\"/positions\\\" class=\\\"btn btn-warning pull-left\\\">Return to Position List</a>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Position\\\" [disabled]=\\\"!f.valid\\\"/>\\n        <br />\\n        <br />\\n      </form>\\n    </div>\\n  </div>\\n<br />\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">\\n  <strong>Success!</strong> Position: \\\"Position Name\\\" was successfully saved.\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"falseMessage\\\">\\n  <strong>Error!</strong> Position: \\\"Position Name\\\" could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit } from '@angular/core';\nimport { Positions } from './data/positions';\n\nimport { PositionServiceService } from './data/position.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.css']\n})\nexport class PositionComponent implements OnInit \n{\n  private paramSubScription: any;\n  private positionSubscription: any;\n  private savePositionsSubcription: any;\n  private position: Positions;\n\n  private successMessage = false;\n  private failMessage = false;\n\n  constructor(private p: PositionServiceService, private r: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.paramSubScription = this.r.params.subscribe((param) => {\n      this.positionSubscription = this.p.getPosition(param['_id']).subscribe((data) => {\n        this.position = data[0];\n      });\n    });\n  }\n\n  onSubmit() {\n    this.savePositionsSubcription = this.p.savePosition(this.position)\n    .subscribe(() => {\n      this.successMessage = true;\n      setTimeout(() => {this.successMessage = false;}, 2500);\n    },\n    () => {\n      this.failMessage = true;\n      setTimeout(() => {this.failMessage = false;}, 2500);\n    });\n  }\n\n  ngOnDestroy() \n  {\n    if(this.paramSubScription){this.paramSubScription.unsubscribe();}\n    if(this.positionSubscription){this.positionSubscription.unsubscribe();}\n    if(this.savePositionsSubcription){this.savePositionsSubcription.unsubscribe();}\n  }\n\n}\n","module.exports = \".center{ margin-top:40px; }\\n.table-responsive{margin-bottom:60px;}\"","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Positions</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum. Nunc quis semper sem.<br>\\n    Morbi libero elit elementum quis faucibus ac, condimentum quis nibh.</p>\\n</div>\\n\\n<table class=\\\"table\\\">\\n  \\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Position Title</th>\\n      <th scope=\\\"col\\\">Position Description</th>\\n      <th scope=\\\"col\\\">Salary</th>\\n    </tr>\\n  </thead>\\n  \\n  <tbody>\\n    <tr *ngFor=\\\"let position of positions\\\" (click)=\\\"routePosition(position._id)\\\">\\n      <td>{{position.PositionName}}</td>\\n      <td>{{position.PositionDescription}}</td>\\n      <td>{{position.PositionBaseSalary}}</td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Positions } from './data/positions';\nimport { PositionServiceService } from './data/position.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-positions',\n  templateUrl: './positions.component.html',\n  styleUrls: ['./positions.component.css']\n})\nexport class PositionsComponent implements OnInit \n{\n  \n  positions: Positions[];\n  getPositionsSub: any;\n  loadingError = false;\n\n  constructor(private positionService: PositionServiceService, private router: Router) { }\n\n  ngOnInit() {\n    this.getPositionsSub = this.positionService.getPositions().subscribe( data => {this.positions = data;}, \n    () =>{\n      this.loadingError = true;\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.getPositionsSub){this.getPositionsSub.unsubscribe();}\n  }\n\n  routePosition(id: string)\n  {\n    this.router.navigate(['/position', id]);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}